# Generated from gramatica.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,18,402,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,1,0,1,
        0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,288,8,1,1,2,4,2,291,8,2,11,2,12,2,
        292,1,3,4,3,296,8,3,11,3,12,3,297,1,3,1,3,4,3,302,8,3,11,3,12,3,
        303,3,3,306,8,3,1,4,1,4,5,4,310,8,4,10,4,12,4,313,9,4,1,5,1,5,1,
        5,1,5,1,6,1,6,5,6,321,8,6,10,6,12,6,324,9,6,1,6,1,6,3,6,328,8,6,
        1,6,3,6,331,8,6,1,6,1,6,1,7,1,7,5,7,337,8,7,10,7,12,7,340,9,7,1,
        7,3,7,343,8,7,1,7,3,7,346,8,7,1,8,1,8,1,8,5,8,351,8,8,10,8,12,8,
        354,9,8,1,8,1,8,1,9,1,9,1,9,5,9,361,8,9,10,9,12,9,364,9,9,1,9,3,
        9,367,8,9,1,9,3,9,370,8,9,1,10,1,10,1,10,3,10,375,8,10,1,11,1,11,
        1,12,1,12,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,
        3,14,392,8,14,1,15,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,0,0,19,
        1,0,3,1,5,2,7,3,9,4,11,5,13,6,15,7,17,8,19,9,21,10,23,11,25,12,27,
        13,29,14,31,15,33,16,35,17,37,18,1,0,12,2,0,65,90,97,122,4,0,48,
        57,65,90,95,95,97,122,3,0,9,10,13,13,32,32,4,0,10,10,13,13,123,123,
        125,125,1,0,13,13,1,0,10,10,4,0,10,10,13,13,34,34,92,92,2,0,34,34,
        92,92,2,0,40,40,91,91,2,0,41,41,93,93,5,0,37,38,42,43,45,45,47,47,
        94,94,1,0,97,97,459,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,
        0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,
        0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,
        0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,1,39,1,0,
        0,0,3,287,1,0,0,0,5,290,1,0,0,0,7,295,1,0,0,0,9,307,1,0,0,0,11,314,
        1,0,0,0,13,318,1,0,0,0,15,334,1,0,0,0,17,347,1,0,0,0,19,357,1,0,
        0,0,21,374,1,0,0,0,23,376,1,0,0,0,25,378,1,0,0,0,27,380,1,0,0,0,
        29,391,1,0,0,0,31,393,1,0,0,0,33,396,1,0,0,0,35,398,1,0,0,0,37,400,
        1,0,0,0,39,40,5,92,0,0,40,41,5,39,0,0,41,2,1,0,0,0,42,43,5,97,0,
        0,43,44,5,108,0,0,44,45,5,103,0,0,45,46,5,111,0,0,46,47,5,114,0,
        0,47,48,5,105,0,0,48,49,5,116,0,0,49,50,5,109,0,0,50,288,5,111,0,
        0,51,52,5,102,0,0,52,53,5,105,0,0,53,54,5,109,0,0,54,55,5,95,0,0,
        55,56,5,97,0,0,56,57,5,108,0,0,57,58,5,103,0,0,58,59,5,111,0,0,59,
        60,5,114,0,0,60,61,5,105,0,0,61,62,5,116,0,0,62,63,5,109,0,0,63,
        288,5,111,0,0,64,65,5,100,0,0,65,66,5,101,0,0,66,67,5,99,0,0,67,
        68,5,108,0,0,68,69,5,97,0,0,69,70,5,114,0,0,70,288,5,101,0,0,71,
        72,5,108,0,0,72,73,5,105,0,0,73,74,5,116,0,0,74,75,5,101,0,0,75,
        76,5,114,0,0,76,77,5,97,0,0,77,288,5,108,0,0,78,79,5,105,0,0,79,
        80,5,110,0,0,80,81,5,116,0,0,81,82,5,101,0,0,82,83,5,105,0,0,83,
        84,5,114,0,0,84,288,5,111,0,0,85,86,5,114,0,0,86,87,5,101,0,0,87,
        88,5,97,0,0,88,288,5,108,0,0,89,90,5,108,0,0,90,91,5,111,0,0,91,
        92,5,103,0,0,92,93,5,105,0,0,93,94,5,99,0,0,94,288,5,111,0,0,95,
        96,5,111,0,0,96,288,5,117,0,0,97,98,5,110,0,0,98,99,5,97,0,0,99,
        288,5,111,0,0,100,101,5,108,0,0,101,102,5,101,0,0,102,103,5,105,
        0,0,103,288,5,97,0,0,104,105,5,115,0,0,105,288,5,101,0,0,106,107,
        5,102,0,0,107,108,5,105,0,0,108,109,5,109,0,0,109,110,5,95,0,0,110,
        111,5,115,0,0,111,288,5,101,0,0,112,113,5,115,0,0,113,114,5,101,
        0,0,114,115,5,110,0,0,115,116,5,97,0,0,116,288,5,111,0,0,117,118,
        5,101,0,0,118,119,5,110,0,0,119,120,5,116,0,0,120,121,5,97,0,0,121,
        288,5,111,0,0,122,123,5,102,0,0,123,124,5,97,0,0,124,125,5,108,0,
        0,125,126,5,115,0,0,126,288,5,111,0,0,127,128,5,118,0,0,128,129,
        5,101,0,0,129,130,5,114,0,0,130,131,5,100,0,0,131,132,5,97,0,0,132,
        133,5,100,0,0,133,134,5,101,0,0,134,135,5,105,0,0,135,136,5,114,
        0,0,136,288,5,111,0,0,137,138,5,99,0,0,138,139,5,97,0,0,139,140,
        5,115,0,0,140,288,5,111,0,0,141,142,5,102,0,0,142,143,5,105,0,0,
        143,144,5,109,0,0,144,145,5,95,0,0,145,146,5,99,0,0,146,147,5,97,
        0,0,147,148,5,115,0,0,148,288,5,111,0,0,149,288,5,101,0,0,150,151,
        5,101,0,0,151,152,5,115,0,0,152,153,5,99,0,0,153,154,5,114,0,0,154,
        155,5,101,0,0,155,156,5,118,0,0,156,288,5,97,0,0,157,158,5,115,0,
        0,158,159,5,101,0,0,159,160,5,106,0,0,160,288,5,97,0,0,161,162,5,
        112,0,0,162,163,5,97,0,0,163,164,5,114,0,0,164,288,5,97,0,0,165,
        166,5,102,0,0,166,167,5,105,0,0,167,168,5,109,0,0,168,169,5,95,0,
        0,169,170,5,112,0,0,170,171,5,97,0,0,171,172,5,114,0,0,172,288,5,
        97,0,0,173,174,5,97,0,0,174,175,5,116,0,0,175,288,5,101,0,0,176,
        177,5,102,0,0,177,178,5,97,0,0,178,179,5,99,0,0,179,288,5,97,0,0,
        180,181,5,101,0,0,181,182,5,110,0,0,182,183,5,113,0,0,183,184,5,
        117,0,0,184,185,5,97,0,0,185,186,5,110,0,0,186,187,5,116,0,0,187,
        288,5,111,0,0,188,189,5,102,0,0,189,190,5,105,0,0,190,191,5,109,
        0,0,191,192,5,95,0,0,192,193,5,101,0,0,193,194,5,110,0,0,194,195,
        5,113,0,0,195,196,5,117,0,0,196,197,5,97,0,0,197,198,5,110,0,0,198,
        199,5,116,0,0,199,288,5,111,0,0,200,201,5,114,0,0,201,202,5,101,
        0,0,202,203,5,103,0,0,203,204,5,105,0,0,204,205,5,115,0,0,205,206,
        5,116,0,0,206,207,5,114,0,0,207,288,5,111,0,0,208,209,5,102,0,0,
        209,210,5,105,0,0,210,211,5,109,0,0,211,212,5,95,0,0,212,213,5,114,
        0,0,213,214,5,101,0,0,214,215,5,103,0,0,215,216,5,105,0,0,216,217,
        5,115,0,0,217,218,5,116,0,0,218,219,5,114,0,0,219,288,5,111,0,0,
        220,221,5,116,0,0,221,222,5,105,0,0,222,223,5,112,0,0,223,288,5,
        111,0,0,224,225,5,112,0,0,225,226,5,114,0,0,226,227,5,111,0,0,227,
        228,5,99,0,0,228,229,5,101,0,0,229,230,5,100,0,0,230,231,5,105,0,
        0,231,232,5,109,0,0,232,233,5,101,0,0,233,234,5,110,0,0,234,235,
        5,116,0,0,235,288,5,111,0,0,236,237,5,102,0,0,237,238,5,105,0,0,
        238,239,5,109,0,0,239,240,5,95,0,0,240,241,5,112,0,0,241,242,5,114,
        0,0,242,243,5,111,0,0,243,244,5,99,0,0,244,245,5,101,0,0,245,246,
        5,100,0,0,246,247,5,105,0,0,247,248,5,109,0,0,248,249,5,101,0,0,
        249,250,5,110,0,0,250,251,5,116,0,0,251,288,5,111,0,0,252,253,5,
        118,0,0,253,254,5,97,0,0,254,288,5,114,0,0,255,256,5,102,0,0,256,
        257,5,117,0,0,257,258,5,110,0,0,258,259,5,99,0,0,259,260,5,97,0,
        0,260,288,5,111,0,0,261,262,5,102,0,0,262,263,5,105,0,0,263,264,
        5,109,0,0,264,265,5,95,0,0,265,266,5,102,0,0,266,267,5,117,0,0,267,
        268,5,110,0,0,268,269,5,99,0,0,269,270,5,97,0,0,270,288,5,111,0,
        0,271,272,5,114,0,0,272,273,5,101,0,0,273,274,5,116,0,0,274,275,
        5,111,0,0,275,276,5,114,0,0,276,277,5,110,0,0,277,288,5,101,0,0,
        278,279,5,99,0,0,279,280,5,111,0,0,280,281,5,110,0,0,281,282,5,115,
        0,0,282,283,5,116,0,0,283,284,5,97,0,0,284,285,5,110,0,0,285,286,
        5,116,0,0,286,288,5,101,0,0,287,42,1,0,0,0,287,51,1,0,0,0,287,64,
        1,0,0,0,287,71,1,0,0,0,287,78,1,0,0,0,287,85,1,0,0,0,287,89,1,0,
        0,0,287,95,1,0,0,0,287,97,1,0,0,0,287,100,1,0,0,0,287,104,1,0,0,
        0,287,106,1,0,0,0,287,112,1,0,0,0,287,117,1,0,0,0,287,122,1,0,0,
        0,287,127,1,0,0,0,287,137,1,0,0,0,287,141,1,0,0,0,287,149,1,0,0,
        0,287,150,1,0,0,0,287,157,1,0,0,0,287,161,1,0,0,0,287,165,1,0,0,
        0,287,173,1,0,0,0,287,176,1,0,0,0,287,180,1,0,0,0,287,188,1,0,0,
        0,287,200,1,0,0,0,287,208,1,0,0,0,287,220,1,0,0,0,287,224,1,0,0,
        0,287,236,1,0,0,0,287,252,1,0,0,0,287,255,1,0,0,0,287,261,1,0,0,
        0,287,271,1,0,0,0,287,278,1,0,0,0,288,4,1,0,0,0,289,291,2,48,57,
        0,290,289,1,0,0,0,291,292,1,0,0,0,292,290,1,0,0,0,292,293,1,0,0,
        0,293,6,1,0,0,0,294,296,2,48,57,0,295,294,1,0,0,0,296,297,1,0,0,
        0,297,295,1,0,0,0,297,298,1,0,0,0,298,305,1,0,0,0,299,301,5,46,0,
        0,300,302,2,48,57,0,301,300,1,0,0,0,302,303,1,0,0,0,303,301,1,0,
        0,0,303,304,1,0,0,0,304,306,1,0,0,0,305,299,1,0,0,0,305,306,1,0,
        0,0,306,8,1,0,0,0,307,311,7,0,0,0,308,310,7,1,0,0,309,308,1,0,0,
        0,310,313,1,0,0,0,311,309,1,0,0,0,311,312,1,0,0,0,312,10,1,0,0,0,
        313,311,1,0,0,0,314,315,7,2,0,0,315,316,1,0,0,0,316,317,6,5,0,0,
        317,12,1,0,0,0,318,322,5,123,0,0,319,321,8,3,0,0,320,319,1,0,0,0,
        321,324,1,0,0,0,322,320,1,0,0,0,322,323,1,0,0,0,323,325,1,0,0,0,
        324,322,1,0,0,0,325,327,5,125,0,0,326,328,7,4,0,0,327,326,1,0,0,
        0,327,328,1,0,0,0,328,330,1,0,0,0,329,331,7,5,0,0,330,329,1,0,0,
        0,330,331,1,0,0,0,331,332,1,0,0,0,332,333,6,6,0,0,333,14,1,0,0,0,
        334,338,5,123,0,0,335,337,8,3,0,0,336,335,1,0,0,0,337,340,1,0,0,
        0,338,336,1,0,0,0,338,339,1,0,0,0,339,342,1,0,0,0,340,338,1,0,0,
        0,341,343,5,13,0,0,342,341,1,0,0,0,342,343,1,0,0,0,343,345,1,0,0,
        0,344,346,5,10,0,0,345,344,1,0,0,0,345,346,1,0,0,0,346,16,1,0,0,
        0,347,352,5,34,0,0,348,351,8,6,0,0,349,351,3,1,0,0,350,348,1,0,0,
        0,350,349,1,0,0,0,351,354,1,0,0,0,352,350,1,0,0,0,352,353,1,0,0,
        0,353,355,1,0,0,0,354,352,1,0,0,0,355,356,5,34,0,0,356,18,1,0,0,
        0,357,362,5,34,0,0,358,361,3,1,0,0,359,361,8,7,0,0,360,358,1,0,0,
        0,360,359,1,0,0,0,361,364,1,0,0,0,362,360,1,0,0,0,362,363,1,0,0,
        0,363,366,1,0,0,0,364,362,1,0,0,0,365,367,5,13,0,0,366,365,1,0,0,
        0,366,367,1,0,0,0,367,369,1,0,0,0,368,370,5,10,0,0,369,368,1,0,0,
        0,369,370,1,0,0,0,370,20,1,0,0,0,371,375,5,58,0,0,372,373,5,46,0,
        0,373,375,5,46,0,0,374,371,1,0,0,0,374,372,1,0,0,0,375,22,1,0,0,
        0,376,377,7,8,0,0,377,24,1,0,0,0,378,379,7,9,0,0,379,26,1,0,0,0,
        380,381,5,44,0,0,381,28,1,0,0,0,382,392,5,62,0,0,383,384,5,62,0,
        0,384,392,5,61,0,0,385,392,5,60,0,0,386,387,5,60,0,0,387,392,5,61,
        0,0,388,389,5,60,0,0,389,392,5,62,0,0,390,392,5,61,0,0,391,382,1,
        0,0,0,391,383,1,0,0,0,391,385,1,0,0,0,391,386,1,0,0,0,391,388,1,
        0,0,0,391,390,1,0,0,0,392,30,1,0,0,0,393,394,5,60,0,0,394,395,5,
        45,0,0,395,32,1,0,0,0,396,397,5,46,0,0,397,34,1,0,0,0,398,399,7,
        10,0,0,399,36,1,0,0,0,400,401,8,11,0,0,401,38,1,0,0,0,21,0,287,292,
        297,303,305,311,322,327,330,338,342,345,350,352,360,362,366,369,
        374,391,1,6,0,0
    ]

class gramatica(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    PALAVRA_CHAVE = 1
    NUM_INT = 2
    NUM_REAL = 3
    IDENT = 4
    WS = 5
    COMENTARIO = 6
    COMENTARIO_NAO_FECHADO = 7
    CADEIA = 8
    CADEIA_LITERAL_NAO_FECHADA = 9
    DOIS_PONTOS = 10
    ABRE_PARENTESES = 11
    FECHA_PARENTESES = 12
    VIRGULA = 13
    OP_RELACIONAL = 14
    OP_ATRIBUICAO = 15
    OP_ACESSO = 16
    OP_ARITMETICO = 17
    NAO_RECONHECIDO = 18

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "','", "'<-'", "'.'" ]

    symbolicNames = [ "<INVALID>",
            "PALAVRA_CHAVE", "NUM_INT", "NUM_REAL", "IDENT", "WS", "COMENTARIO", 
            "COMENTARIO_NAO_FECHADO", "CADEIA", "CADEIA_LITERAL_NAO_FECHADA", 
            "DOIS_PONTOS", "ABRE_PARENTESES", "FECHA_PARENTESES", "VIRGULA", 
            "OP_RELACIONAL", "OP_ATRIBUICAO", "OP_ACESSO", "OP_ARITMETICO", 
            "NAO_RECONHECIDO" ]

    ruleNames = [ "ESC_SEQ", "PALAVRA_CHAVE", "NUM_INT", "NUM_REAL", "IDENT", 
                  "WS", "COMENTARIO", "COMENTARIO_NAO_FECHADO", "CADEIA", 
                  "CADEIA_LITERAL_NAO_FECHADA", "DOIS_PONTOS", "ABRE_PARENTESES", 
                  "FECHA_PARENTESES", "VIRGULA", "OP_RELACIONAL", "OP_ATRIBUICAO", 
                  "OP_ACESSO", "OP_ARITMETICO", "NAO_RECONHECIDO" ]

    grammarFileName = "gramatica.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


